# Domain
# This would be set to the production domain with an env var on deployment
# used by Traefik to transmit traffic and aqcuire TLS certificates
DOMAIN=localhost
# To test the local Traefik config
# DOMAIN=localhost.lambdagency.com

# Used by the backend to generate links in emails to the frontend
FRONTEND_HOST=http://localhost:5173
BACKEND_HOST=http://localhost:8000
# In staging and production, set this env var to the frontend host, e.g.
# FRONTEND_HOST=https://dashboard.example.com

# Environment: local, staging, production
ENVIRONMENT=local

PROJECT_NAME="lambdagency"
STACK_NAME=project

# Backend
BACKEND_CORS_ORIGINS="http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://lambdagency.com,https://lambdagency.com,http://staging.lambdagency.com,https://staging.lambdagency.com"
SECRET_KEY=changethis
FIRST_SUPERUSER=admin@example.com
FIRST_SUPERUSER_PASSWORD=changethis

# Emails
SMTP_HOST=
SMTP_USER=
SMTP_PASSWORD=
EMAILS_FROM_EMAIL=
SMTP_TLS=True
SMTP_SSL=False
SMTP_PORT=587

# Postgres
POSTGRES_SERVER=localhost
POSTGRES_PORT=5432
POSTGRES_DB=app
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changethis

S3_ENDPOINT_URL=http://localhost:9000
S3_ACCESS_KEY_ID=changethis
S3_SECRET_ACCESS_KEY=changethis
S3_CONFIGS_BUCKET=configs

SENTRY_DSN=
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# Configure these with your own Docker registry images
DOCKER_IMAGE_BACKEND=backend
DOCKER_IMAGE_FRONTEND=frontend

# Kubernetes Configuration
KUBERNETES_IN_CLUSTER=false
KUBERNETES_NAMESPACE=bot-jobs
KUBERNETES_BOT_PREFIX=applier

# Bot Configuration
BOT_IMAGE=lambdagency/job-apply-bot:latest
